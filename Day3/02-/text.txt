## Exercices sur les Structures en C

### Challenge 1 : Définition et Utilisation de Structure

Écrivez un programme C qui définit une structure pour représenter une personne avec les champs `nom`, `prenom`, et `age`. Créez une variable de cette structure, assignez des valeurs aux champs, et affichez ces valeurs.

### Challenge 2 : Structure avec Tableau

Écrivez un programme C qui définit une structure pour représenter un étudiant avec les champs `nom`, `prenom`, et un tableau d'entiers pour stocker les notes. Assignez des valeurs aux champs et aux notes, puis affichez les informations de l'étudiant.

### Challenge 3 : Passage de Structure en Argument

Écrivez un programme C qui définit une structure pour représenter un rectangle avec les champs `longueur` et `largeur`. Écrivez une fonction qui prend une variable de cette structure en argument et calcule l'aire du rectangle. Affichez l'aire dans le programme principal.

### Challenge 4 : Structure avec Pointeurs

Écrivez un programme C qui définit une structure pour représenter un point dans un plan avec les champs `x` et `y`. Utilisez des pointeurs pour créer une variable de cette structure et modifiez ses valeurs. Affichez les valeurs du point.

### Challenge 5 : Structure et Fonction de Retour

Écrivez un programme C qui définit une structure pour représenter un livre avec les champs `titre`, `auteur`, et `année`. Écrivez une fonction qui retourne une variable de cette structure initialisée avec des valeurs données. Affichez les informations du livre dans le programme principal.



#####################################################



## Exercises on Structures in C

### Challenge 1: Defining and Using Structures

Write a C program that defines a structure to represent a person with the fields `lastname`, `firstname`, and `age`. Create a variable from this structure, assign values ​​to the fields, and display these values.

### Challenge 2: Structure with Array

Write a C program that defines a structure to represent a student with the fields `lastname`, `firstname`, and an array of integers to store grades. Assign values ​​to the fields and grades, then display the student's information.

### Challenge 3: Passing Structures as Arguments

Write a C program that defines a structure to represent a rectangle with the fields `length` and `width`. Write a function that takes a variable from this structure as an argument and calculates the area of ​​the rectangle. Display the area in the main program.

### Challenge 4: Structure with Pointers

Write a C program that defines a structure to represent a point in a plane with the fields `x` and `y`. Use pointers to create a variable in this structure and modify its values. Display the point values.

### Challenge 5: Structure and Return Function

Write a C program that defines a structure to represent a book with the fields `title`, `author`, and `year`. Write a function that returns a variable from this structure initialized with given values. Display the book information in the main program.